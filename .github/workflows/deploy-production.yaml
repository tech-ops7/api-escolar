name: Deploy to Production

on:
  push:
    tags:
      - 'v*'

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  REGION: ${{ secrets.GCP_REGION }}
  REPOSITORY_ID: api-escolar-repo
  IMAGE_NAME: api-escolar

jobs:
  deploy-production:
    runs-on: ubuntu-latest
    environment: production
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        
    - name: Set up kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'latest'
        
    - name: Get GKE credentials
      run: |
        gcloud container clusters get-credentials ${{ secrets.GKE_CLUSTER_NAME }} \
          --region ${{ secrets.GCP_REGION }} \
          --project ${{ secrets.GCP_PROJECT_ID }}
          
    - name: Deploy to production
      run: |
        # Extrair versÃ£o da tag
        VERSION=${GITHUB_REF#refs/tags/}
        echo "Deploying version: $VERSION"
        
        # Atualizar a imagem no deployment de produÃ§Ã£o
        kubectl set image deployment/api-escolar-prod api-escolar=${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY_ID }}/${{ env.IMAGE_NAME }}:$VERSION -n api-escolar-prod
        
        # Aguardar o rollout
        kubectl rollout status deployment/api-escolar-prod -n api-escolar-prod
        
        # Verificar o status do deployment
        kubectl get pods -n api-escolar-prod
        
    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          ðŸš€ **Production Deployment Successful!**
          
          **Version:** ${{ github.ref }}
          **Image:** `${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY_ID }}/${{ env.IMAGE_NAME }}:${{ github.ref }}`
          **Environment:** Production
          **Cluster:** ${{ secrets.GKE_CLUSTER_NAME }}
          
          The application has been successfully deployed to production.
        draft: false
        prerelease: false
        
    - name: Notify deployment success
      run: |
        echo "âœ… Production deployment completed successfully!"
        echo "Version: ${{ github.ref }}"
        echo "Image: ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY_ID }}/${{ env.IMAGE_NAME }}:${{ github.ref }}"
